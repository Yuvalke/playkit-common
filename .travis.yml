conditions: v1
sudo: required
dist: xenial
language: node_js
node_js:
  - "9.11.1"

addons:
  chrome: stable

services:
  - xvfb
cache:
  yarn: true
  directories:
    - node_modules

before_install:
  - export DISPLAY=:99.0

script:
  - set -ev
  - yarn install

stages:
  - Release canary

jobs:
  fast_finish: true
  include:
    - stage: Release canary
      if: (branch = master) AND (type == pull_request) AND commit_message !~ /^chore\(release\)/ AND commit_message !~ /^(chore).*(update dist)$/
      name: "Release canary"
      before_deploy:
        - echo "Run standard-version"
        - yarn run release --prerelease canary --skip.commit=true --skip.tag=true
        - sha=$(git rev-parse --verify --short HEAD)
        - echo "Current sha ${sha}"
        - currentVersion=$(npx -c 'echo "$npm_package_version"')
        - commitNumberAfterTag=$(git rev-list  `git rev-list --tags --no-walk --max-count=1`..HEAD --count)
        - echo "Current version ${currentVersion}"
        - newVersion=$(echo $currentVersion | sed -e "s/canary\.[[:digit:]]/canary.${commitNumberAfterTag}-${sha}/g")
        - echo "New version ${newVersion}"
        - sed -iE "s/$currentVersion/$newVersion/g" package.json
        - sed -iE "s/$currentVersion/$newVersion/g" CHANGELOG.md
        - rm package.jsonE
        - rm CHANGELOG.mdE
        - yarn run commit:dist
      deploy:
        - provider: releases
          api_key: $GH_NOTE_TOKEN
          file_glob: true
          prerelease: true
          skip_cleanup: true
          on:
            branch: master
            tags: false
      after_deploy:
        - currentVersion=$(npx -c 'echo "$npm_package_version"')
        - echo "${currentVersion}"
